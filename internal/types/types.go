// Code generated by goctl. DO NOT EDIT.
package types

type Enum struct {
	Label interface{} `json:"label"` // 名
	Value interface{} `json:"value"` // 值
}

type Enums struct {
	List []Enum `json:"list"` // 枚举列表数据
}

type Option struct {
	Title string `json:"title"` // 名
	Value int64  `json:"value"` // 值
}

type Options struct {
	List []Option `json:"list"` // 选项列表数据
}

type TreeOption struct {
	Title    string       `json:"title"`             // 名
	Value    int64        `json:"value"`             // 值
	Children []TreeOption `json:"children,optional"` // 子集
}

type TreeOptions struct {
	List []TreeOption `json:"list"` // 树形选项列表数据
}

type JwtToken struct {
	AccessToken  string `json:"accessToken"`  // token
	AccessExpire int64  `json:"accessExpire"` // expire
	RefreshAfter int64  `json:"refreshAfter"` // refresh at
}

type ListReq struct {
	PageSize int64  `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page     int64  `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current  int64  `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword  string `form:"keyword,optional"`             // 关键词，可选
}

type ByIdReq struct {
	Id int64 `form:"id"` // 主键
}

type NilReq struct {
}

type NilResp struct {
}

type Resp struct {
	Body interface{} `json:"body"` // 响应数据
}

type CaptchaResp struct {
	CaptchaId string `json:"captchaId"` // captcha id
	ExpiresAt int64  `json:"expiresAt"` // expires time
}

type BaseResp struct {
	Status       bool        `json:"status"`                          // 响应状态
	Success      bool        `json:"success"`                         // 响应状态，用于对接umijs
	Message      string      `json:"message,optional,omitempty"`      // 给予的提示信息
	Data         interface{} `json:"data,optional,omitempty"`         // 【选填】响应的业务数据
	Total        int64       `json:"total,optional,omitempty"`        // 【选填】数据总个数
	PageSize     int64       `json:"pageSize,optional,omitempty"`     // 【选填】单页数量
	Current      int64       `json:"current,optional,omitempty"`      // 【选填】当前页码，用于对接umijs
	Page         int64       `json:"page,optional,omitempty"`         // 【选填】当前页码
	TotalPage    int64       `json:"totalPage,optional,omitempty"`    // 【选填】自增项，总共有多少页，根据前端的pageSize来计算
	ErrorCode    int64       `json:"errorCode,optional,omitempty"`    // 【选填】错误类型代码：400错误请求，401未授权，500服务器内部错误，200成功
	ErrorMessage string      `json:"errorMessage,optional,omitempty"` // 【选填】向用户显示消息
	TraceMessage string      `json:"traceMessage,optional,omitempty"` // 【选填】调试错误信息，请勿在生产环境下使用，可有可无
	ShowType     int64       `json:"showType,optional,omitempty"`     // 【选填】错误显示类型：0.不提示错误;1.警告信息提示；2.错误信息提示；4.通知提示；9.页面跳转
	TraceId      string      `json:"traceId,optional,omitempty"`      // 【选填】方便后端故障排除：唯一的请求ID
	Host         string      `json:"host,optional,omitempty"`         // 【选填】方便后端故障排除：当前访问服务器的主机
}

type CaptchaBgColor struct {
	R uint8 `json:"R,optional,default=254,range=[0:254]"`
	G uint8 `json:"G,optional,default=254,range=[0:254]"`
	B uint8 `json:"B,optional,default=254,range=[0:254]"`
	A uint8 `json:"A,optional,default=254,range=[0:254]"`
}

type CaptchaReq struct {
	Height  int            `json:"height,optional,default=60"`
	Width   int            `json:"width,optional,default=200"`
	BgColor CaptchaBgColor `json:"BgColor"`
}

type LuckydrawReq struct {
	Passport     string `json:"passport,optional"`
	ActivityUuid string `json:"activityUuid,optional"`
}

type CaptchaInfo struct {
	CaptchaId   string `json:"captchaId"`
	Base64Image string `json:"base64Image"`
}

type Activity struct {
	Id     int64  `json:"id"`
	Uuid   string `json:"uuid"`
	Name   string `json:"name"`
	Status int64  `json:"status"`
}

type AddActivityReq struct {
	Name   string `json:"name"`
	Status int64  `json:"status"`
}

type PutActivityReq struct {
	Id     int64  `json:"id"`
	Uuid   string `json:"uuid"`
	Name   string `json:"name"`
	Status int64  `json:"status"`
}

type DelActivityReq struct {
	Id int64 `json:"id"` // ID
}

type GetActivityReq struct {
	Id int64 `form:"id"` // ID
}

type GetActivityListReq struct {
	PageSize int64  `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page     int64  `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current  int64  `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword  string `form:"keyword,optional"`             // 关键词，可选
	Id       int64  `form:"id,optional,default=-1"`
	Uuid     string `form:"uuid,optional"`
	Name     string `form:"name,optional"`
	Status   int64  `form:"status,optional,default=-1"`
}

type GetActivityEnumsReq struct {
	ParentId int64 `form:"parentId,optional,default=-1"` // 父级ID
}

type Adminer struct {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Password string `json:"password"`
	Access   string `json:"access"`
	IsSuper  int64  `json:"isSuper"`
}

type AddAdminerReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Access   string `json:"access"`
	IsSuper  int64  `json:"isSuper"`
}

type PutAdminerReq struct {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	Password string `json:"password"`
	Access   string `json:"access"`
	IsSuper  int64  `json:"isSuper"`
}

type DelAdminerReq struct {
	Id int64 `json:"id"` // ID
}

type GetAdminerReq struct {
	Id int64 `form:"id"` // ID
}

type GetAdminerListReq struct {
	PageSize int64  `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page     int64  `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current  int64  `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword  string `form:"keyword,optional"`             // 关键词，可选
	Id       int64  `form:"id,optional,default=-1"`
	Username string `form:"username,optional"`
	Password string `form:"password,optional"`
	Access   string `form:"access,optional"`
	IsSuper  int64  `form:"isSuper,optional,default=-1"`
}

type GetAdminerEnumsReq struct {
	ParentId int64 `form:"parentId,optional,default=-1"` // 父级ID
}

type AdminerLoginReq struct {
	Username  string `json:"username"`
	Password  string `json:"password"`
	AutoLogin bool   `json:"autoLogin"`
	CaptchaId string `json:"captchaId"`
	Solution  string `json:"solution"`
}

type Awards struct {
	Id         int64   `json:"id"`
	ActivityId int64   `json:"activityId"`
	Uuid       string  `json:"uuid"`
	Grade      string  `json:"grade"`
	Name       string  `json:"name"`
	Image      string  `json:"image"`
	Price      float64 `json:"price"` // 奖品价格
	Prob       int64   `json:"prob"`
	Quantity   int64   `json:"quantity"` // 总数量
	Count      int64   `json:"count"`    // 已抽数量
	IsWin      int64   `json:"isWin"`    // 是否中奖
}

type AddAwardsReq struct {
	ActivityId int64   `json:"activityId"`
	Grade      string  `json:"grade"`
	Name       string  `json:"name"`
	Image      string  `json:"image"`
	Price      float64 `json:"price"` // 奖品价格
	Prob       int64   `json:"prob"`
	Quantity   int64   `json:"quantity"` // 总数量
	Count      int64   `json:"count"`    // 已抽数量
	IsWin      int64   `json:"isWin"`    // 是否中奖
}

type PutAwardsReq struct {
	Id         int64   `json:"id"`
	ActivityId int64   `json:"activityId"`
	Uuid       string  `json:"uuid"`
	Grade      string  `json:"grade"`
	Name       string  `json:"name"`
	Image      string  `json:"image"`
	Price      float64 `json:"price"` // 奖品价格
	Prob       int64   `json:"prob"`
	Quantity   int64   `json:"quantity"` // 总数量
	Count      int64   `json:"count"`    // 已抽数量
	IsWin      int64   `json:"isWin"`    // 是否中奖
}

type DelAwardsReq struct {
	Id int64 `json:"id"` // ID
}

type GetAwardsReq struct {
	Id int64 `form:"id"` // ID
}

type GetAwardsListReq struct {
	PageSize   int64   `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page       int64   `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current    int64   `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword    string  `form:"keyword,optional"`             // 关键词，可选
	Id         int64   `form:"id,optional,default=-1"`
	ActivityId int64   `form:"activityId,optional,default=-1"`
	Uuid       string  `form:"uuid,optional"`
	Grade      string  `form:"grade,optional"`
	Name       string  `form:"name,optional"`
	Image      string  `form:"image,optional"`
	Price      float64 `form:"price,optional,default=-1"` // 奖品价格
	Prob       int64   `form:"prob,optional,default=-1"`
	Quantity   int64   `form:"quantity,optional,default=-1"` // 总数量
	Count      int64   `form:"count,optional,default=-1"`    // 已抽数量
	IsWin      int64   `form:"isWin,optional,default=-1"`    // 是否中奖
}

type GetAwardsEnumsReq struct {
	ParentId int64 `form:"parentId,optional,default=-1"` // 父级ID
}

type GetAwardsListByActivityUuidReq struct {
	ActivityUuid string `json:"activityUuid"`
}

type PublicAwards struct {
	Id    int64   `json:"id"`
	Uuid  string  `json:"uuid"`
	Grade string  `json:"grade"`
	Name  string  `json:"name"`
	Image string  `json:"image"`
	Price float64 `json:"price"`
	IsWin bool    `json:"is_win"`
}

type SelectAwardsByIdsReq struct {
	Ids []int64 `json:"ids"`
}

type Users struct {
	Id              int64  `json:"id"`
	ActivityId      int64  `json:"activityId"`
	AvailableAwards string `json:"availableAwards"` // 指定其可抽中的奖品
	Name            string `json:"name"`
	Passport        string `json:"passport"`
	Count           int64  `json:"count"` // 抽獎次數
	Total           int64  `json:"total"`
}

type AddUsersReq struct {
	ActivityId      int64  `json:"activityId"`
	AvailableAwards string `json:"availableAwards"` // 指定其可抽中的奖品
	Name            string `json:"name"`
	Passport        string `json:"passport"`
	Count           int64  `json:"count"` // 抽獎次數
	Total           int64  `json:"total"`
}

type PutUsersReq struct {
	Id              int64  `json:"id"`
	ActivityId      int64  `json:"activityId"`
	AvailableAwards string `json:"availableAwards"` // 指定其可抽中的奖品
	Name            string `json:"name"`
	Passport        string `json:"passport"`
	Count           int64  `json:"count"` // 抽獎次數
	Total           int64  `json:"total"`
}

type DelUsersReq struct {
	Id int64 `json:"id"` // ID
}

type GetUsersReq struct {
	Id int64 `form:"id"` // ID
}

type GetUsersListReq struct {
	PageSize        int64  `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page            int64  `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current         int64  `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword         string `form:"keyword,optional"`             // 关键词，可选
	Id              int64  `form:"id,optional,default=-1"`
	ActivityId      int64  `form:"activityId,optional,default=-1"`
	AvailableAwards string `form:"availableAwards,optional"` // 指定其可抽中的奖品
	Name            string `form:"name,optional"`
	Passport        string `form:"passport,optional"`
	Count           int64  `form:"count,optional,default=-1"` // 抽獎次數
	Total           int64  `form:"total,optional,default=-1"`
}

type GetUsersEnumsReq struct {
	ParentId int64 `form:"parentId,optional,default=-1"` // 父级ID
}

type UserRegisterReq struct {
	UserPassport string `json:"userPassport"` //用户凭证
	ActivityUuid string `json:"activityUuid"` //活动凭证
	SecretKey    string `json:"secretKey"`    //密钥
}

type UserLoginReq struct {
	Passport     string `json:"passport"`     //用户凭证
	ActivityUuid string `json:"activityUuid"` //活动凭证
}

type PublicUser struct {
	Id         int64  `json:"id"`
	ActivityId int64  `json:"activity_id"`
	Passport   string `json:"passport"`
	Count      int64  `json:"count"` // 抽獎次數
	Total      int64  `json:"total"`
}

type CurrentUserReq struct {
	Passport     string `json:"passport,optional"`
	ActivityUuid string `json:"activityUuid,optional"`
}

type UserDetail struct {
	User            *Users    `json:"user,optional"`
	Activity        *Activity `json:"activity,optional"`
	AvailableAwards []*Awards `json:"availableAwards,optional"`
}

type WinningRecords struct {
	Id         int64  `json:"id"`
	UserId     int64  `json:"userId"`
	AwardId    int64  `json:"awardId"`
	ActivityId int64  `json:"activityId"`
	Ip         string `json:"ip"`
	Platform   string `json:"platform"`
}

type AddWinningRecordsReq struct {
	UserId     int64  `json:"userId"`
	AwardId    int64  `json:"awardId"`
	ActivityId int64  `json:"activityId"`
	Ip         string `json:"ip"`
	Platform   string `json:"platform"`
}

type PutWinningRecordsReq struct {
	Id         int64  `json:"id"`
	UserId     int64  `json:"userId"`
	AwardId    int64  `json:"awardId"`
	ActivityId int64  `json:"activityId"`
	Ip         string `json:"ip"`
	Platform   string `json:"platform"`
}

type DelWinningRecordsReq struct {
	Id int64 `json:"id"` // ID
}

type GetWinningRecordsReq struct {
	Id int64 `form:"id"` // ID
}

type GetWinningRecordsListReq struct {
	PageSize   int64  `form:"pageSize,optional,default=20"` // 页面容量，默认20，可选
	Page       int64  `form:"page,optional,default=1"`      // 当前页码，默认1，可选
	Current    int64  `form:"current,optional,default=1"`   // 当前页码，默认1，用于对接umijs，可选
	Keyword    string `form:"keyword,optional"`             // 关键词，可选
	Id         int64  `form:"id,optional,default=-1"`
	UserId     int64  `form:"userId,optional,default=-1"`
	AwardId    int64  `form:"awardId,optional,default=-1"`
	ActivityId int64  `form:"activityId,optional,default=-1"`
	Ip         string `form:"ip,optional"`
	Platform   string `form:"platform,optional"`
}

type GetWinningRecordsEnumsReq struct {
	ParentId int64 `form:"parentId,optional,default=-1"` // 父级ID
}

type QueryReq struct {
	Passport     string `json:"passport,optional"`
	ActivityUuid string `json:"activityUuid,optional"`
}

type WinningRecordsInfo struct {
	WinningRecord *WinningRecords `json:"winningRecord,optional"`
	Award         *PublicAwards   `json:"award,optional"`
}

type WinningRecordsDetail struct {
	WinningRecord *WinningRecords `json:"winningRecord,optional"`
	Award         *Awards         `json:"award,optional"`
	User          *Users          `json:"user,optional"`
	Activity      *Activity       `json:"activity,optional"`
}
